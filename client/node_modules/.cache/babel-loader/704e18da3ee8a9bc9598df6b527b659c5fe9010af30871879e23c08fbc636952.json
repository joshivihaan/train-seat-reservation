{"ast":null,"code":"var _jsxFileName = \"/home/vihaan/Node/train-seat-reservation/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Seat = ({\n  seat,\n  onSeatClick\n}) => {\n  const handleClick = () => {\n    if (seat.isAvailable) {\n      onSeatClick(seat.number);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `seat ${seat.isAvailable ? 'available' : 'unavailable'}`,\n    onClick: handleClick,\n    children: seat.number\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Seat;\nconst App = () => {\n  _s();\n  const [availableSeats, setAvailableSeats] = useState(null);\n  const [numSeatsToReserve, setNumSeatsToReserve] = useState(0);\n  const [reservationMessage, setReservationMessage] = useState('');\n  useEffect(() => {\n    // Fetch available seats when the component mounts\n    fetchAvailableSeats();\n  }, []);\n  const fetchAvailableSeats = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/available-seats');\n      const data = await response.json();\n      setAvailableSeats(data.availableSeats);\n    } catch (error) {\n      console.error('Error fetching available seats:', error);\n    }\n  };\n  const handleReserveSeats = async () => {\n    if (numSeatsToReserve <= 0 || numSeatsToReserve > 7) {\n      alert('Invalid number of seats. Please enter a number between 1 and 7.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/reserve-seats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          numSeats: numSeatsToReserve\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n      // alert(data.message);  // Show a success message to the user\n      setReservationMessage(data.message);\n      // Fetch updated available seats after reservation\n      fetchAvailableSeats();\n    } catch (error) {\n      console.error('Error reserving seats:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Train Seat Reservation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"numSeats\",\n        children: \"Number of Seats to Reserve : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"numSeats\",\n        value: numSeatsToReserve,\n        onChange: e => setNumSeatsToReserve(Math.max(1, parseInt(e.target.value))),\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReserveSeats,\n        children: \"Reserve Seats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coach-default\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"seats-info\",\n        children: [\"Available Seats : \", availableSeats]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), reservationMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"reservation-message\",\n      children: reservationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this), reservationMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coach\",\n      children: seats.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map(seat => /*#__PURE__*/_jsxDEV(Seat, {\n          seat: seat,\n          onSeatClick: handleSeatClick\n        }, seat.number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bCjLLP4U06njYlyv7wx7jBPm16Q=\");\n_c2 = App;\nexport default App;\n\n// const App = () => {\n//   const totalSeats = 80;\n//   const seatsPerRow = 7;\n//   const lastRowSeats = 3;\n\n//   const generateSeats = () => {\n//     const seats = [];\n//     let seatNumber = 1;\n\n//     while (seatNumber <= totalSeats) {\n//       const row = [];\n\n//       for (let i = 0; i < seatsPerRow; i++) {\n//         if (seatNumber <= totalSeats) {\n//           row.push({ number: seatNumber, isAvailable: true });\n//           seatNumber++;\n//         }\n//       }\n\n//       seats.push(row);\n//     }\n\n//     return seats;\n//   };\n\n//   const [seats, setSeats] = useState(generateSeats());\n\n//   const handleSeatClick = (seatNumber) => {\n//     const updatedSeats = seats.map((row) =>\n//       row.map((seat) =>\n//         seat.number === seatNumber ? { ...seat, isAvailable: false } : seat\n//       )\n//     );\n//     setSeats(updatedSeats);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"header\">Train Seat Reservation</h1>\n//       <div className=\"coach\">\n//         {seats.map((row, rowIndex) => (\n//           <div className=\"row\" key={rowIndex}>\n//             {row.map((seat) => (\n//               <Seat key={seat.number} seat={seat} onSeatClick={handleSeatClick} />\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Seat\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Seat","seat","onSeatClick","handleClick","isAvailable","number","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","availableSeats","setAvailableSeats","numSeatsToReserve","setNumSeatsToReserve","reservationMessage","setReservationMessage","fetchAvailableSeats","response","fetch","data","json","error","console","handleReserveSeats","alert","method","headers","body","JSON","stringify","numSeats","log","message","htmlFor","type","id","value","onChange","e","Math","max","parseInt","target","min","seats","map","row","rowIndex","handleSeatClick","_c2","$RefreshReg$"],"sources":["/home/vihaan/Node/train-seat-reservation/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nconst Seat = ({ seat, onSeatClick }) => {\n  const handleClick = () => {\n    if (seat.isAvailable) {\n      onSeatClick(seat.number);\n    }\n  };\n\n  return (\n    <div\n      className={`seat ${seat.isAvailable ? 'available' : 'unavailable'}`}\n      onClick={handleClick}\n    >\n      {seat.number}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [availableSeats, setAvailableSeats] = useState(null);\n  const [numSeatsToReserve, setNumSeatsToReserve] = useState(0);\n  const [reservationMessage, setReservationMessage] = useState('');\n\n  useEffect(() => {\n    // Fetch available seats when the component mounts\n    fetchAvailableSeats();\n  }, []);\n\n  const fetchAvailableSeats = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/available-seats');\n      const data = await response.json();\n      setAvailableSeats(data.availableSeats);\n    } catch (error) {\n      console.error('Error fetching available seats:', error);\n    }\n  };\n\n  const handleReserveSeats = async () => {\n    if (numSeatsToReserve <= 0 || numSeatsToReserve > 7) {\n      alert('Invalid number of seats. Please enter a number between 1 and 7.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/reserve-seats', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          numSeats: numSeatsToReserve\n        })\n      });\n\n      const data = await response.json();\n      console.log(data);\n      // alert(data.message);  // Show a success message to the user\n      setReservationMessage(data.message);\n      // Fetch updated available seats after reservation\n      fetchAvailableSeats();\n    } catch (error) {\n      console.error('Error reserving seats:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"header\">Train Seat Reservation</h1>\n\n      <div className=\"container\">\n        <label htmlFor=\"numSeats\">Number of Seats to Reserve : </label>\n        <input\n          type=\"number\"\n          id=\"numSeats\"\n          value={numSeatsToReserve}\n          onChange={(e) => setNumSeatsToReserve(Math.max(1, parseInt(e.target.value)))}\n          min=\"1\" \n        />\n        <button onClick={handleReserveSeats}>Reserve Seats</button>\n      </div>\n\n      <div className=\"coach-default\">\n        <p className=\"seats-info\">Available Seats : {availableSeats}</p>\n      </div>\n        {reservationMessage && (\n          <p className=\"reservation-message\">{reservationMessage}</p>\n        )}\n        {reservationMessage && (\n        <div className=\"coach\">\n         {seats.map((row, rowIndex) => (\n           <div className=\"row\" key={rowIndex}>\n             {row.map((seat) => (\n               <Seat key={seat.number} seat={seat} onSeatClick={handleSeatClick} />\n             ))}\n           </div>\n         ))}\n        </div>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n\n// const App = () => {\n//   const totalSeats = 80;\n//   const seatsPerRow = 7;\n//   const lastRowSeats = 3;\n\n//   const generateSeats = () => {\n//     const seats = [];\n//     let seatNumber = 1;\n\n//     while (seatNumber <= totalSeats) {\n//       const row = [];\n\n//       for (let i = 0; i < seatsPerRow; i++) {\n//         if (seatNumber <= totalSeats) {\n//           row.push({ number: seatNumber, isAvailable: true });\n//           seatNumber++;\n//         }\n//       }\n\n//       seats.push(row);\n//     }\n\n//     return seats;\n//   };\n\n//   const [seats, setSeats] = useState(generateSeats());\n\n//   const handleSeatClick = (seatNumber) => {\n//     const updatedSeats = seats.map((row) =>\n//       row.map((seat) =>\n//         seat.number === seatNumber ? { ...seat, isAvailable: false } : seat\n//       )\n//     );\n//     setSeats(updatedSeats);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"header\">Train Seat Reservation</h1>\n//       <div className=\"coach\">\n//         {seats.map((row, rowIndex) => (\n//           <div className=\"row\" key={rowIndex}>\n//             {row.map((seat) => (\n//               <Seat key={seat.number} seat={seat} onSeatClick={handleSeatClick} />\n//             ))}\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}